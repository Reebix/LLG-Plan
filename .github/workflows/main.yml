name: App Release

on:
  push:
    branches: [ main ]

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history

      - name: Git Version
        id: version
        uses: codacy/git-version@2.7.1
      
      - name: Use the version
        run: |
          echo ${{ steps.version.outputs.version }} > version.txt
      - name: Use the previous version
        run: |
          echo ${{ steps.version.outputs.previous-version }}
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt
  build:
    name: Build APK and Create release
    needs: [ version ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get version.txt
      uses: actions/download-artifact@v2
      with:
        name: version
    - name: Create new file without newline char from version.txt
      run: tr -d '\n' < version.txt > version1.txt
    - name: Read version
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: version1.txt
    - name: Update version in YAML
      run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '3.13.5'
    - run: flutter upgrade
    - run: flutter pub get
    - run: flutter build apk --release
    - run: flutter build web
 #   - run: flutter build windows
    - run: flutter build appbundle
    - name: Create a Release in GitHub
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
        token: ${{ secrets.GH_TOKEN }}
        tag: ${{ steps.version.outputs.content }}
        commit: ${{ github.sha }}
        generateReleaseNotes: true
        prerelease: true

