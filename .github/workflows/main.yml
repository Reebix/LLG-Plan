name: Auto Versioning
on:
  push:
    branches:
      - main
concurrency: production
jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Minor version for each merge
      id: taggerDryRun
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        WITH_V: true
        DRY_RUN: true

    - name: echo new tag
      run: |
        echo "The next tag version will be: ${{ steps.taggerDryRun.outputs.new_tag }}"
    - name: echo tag
      run: |
        echo "The current tag is: ${{ steps.taggerDryRun.outputs.tag }}"
    - name: echo part
      run: |
        echo "The version increment was: ${{ steps.taggerDryRun.outputs.part }}"
    # DO MY BUILD HERE
    # IN CASE OF FAILURE, THE STEP BELOW WILL NOT RUN.
    

    - name: Minor version for each merge
      id: taggerFinal
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        WITH_V: true

  build:
    name: Build APK and Create release
    needs: [ version ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get version.txt
      uses: actions/download-artifact@v2
      with:
        name: version
    - name: Create new file without newline char from version.txt
      run: tr -d '\n' < version.txt > version1.txt
    - name: Read version
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: version1.txt
    - name: Update version in YAML
      run: sed -i 's/99.99.99+99/${{ steps.taggerDryRun.outputs.new_tag }}+${{ github.run_number }}/g' pubspec.yaml
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '3.13.5'
    - run: flutter upgrade
    - run: flutter pub get
    - run: flutter build apk --release
 #   - run: flutter build web
 #   - run: flutter build windows
    - run: flutter build appbundle
    - name: Create a Release in GitHub
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
        token: ${{ secrets.GH_TOKEN }}
        tag: ${{ steps.taggerDryRun.outputs.new_tag }}
        commit: ${{ github.sha }}
        generateReleaseNotes: true
        prerelease: true

